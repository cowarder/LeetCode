class Solution {
public:
	bool containsNearbyDuplicate(vector<int>& nums, int k) {
		int len = nums.size();
		int i = 0;
		if (len <= 1)return false;
		for (i = 0; i < len; i++) {
			for (int j = i + 1; j <len; j++) {
				if (nums[i] == nums[j] && abs(i - j) <= k)
					return true;
			}
		}
		if (i >= len)return false;
	}
};
class Solution {
public:
	bool containsNearbyDuplicate(vector<int>& nums, int k) {
		int len = nums.size();
		int i = 0, j = 0;
		if (len <= k)
			for (i = 0; i < len; i++)
				for (j = i; j < len; j++)
					if (nums[i] == nums[j] && i != j)
						return true;
		if (len > k) {
			for (i = 0; i < (len - 1); i++) {
				for (int j = i + 1; j <= i + k; j++)
					if (nums[i] == nums[j])
						return true;
			}
		}
		return false;
	}
};